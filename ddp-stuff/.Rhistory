---
title: "R Notebook"
output: html_notebook
---
This is an [R Markdown](http://rmarkdown.rstudio.com) Notebook. When you execute code within the notebook, the results appear beneath the code.
---
title: "Untitled"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r cars}
summary(cars)
install.packages("Hawkes")
install.packages("hawkes")
library(hawkes)
data = read_tsv("ICPSR_20240/DS0002/20240-0002-Data.tsv")
library(read_delim)
read_delim()
read_csv()
install.packages('tidyvers')
install.packages('tidyverse')
library(tidyverse)
data = read_tsv("ICPSR_20240/DS0002/20240-0002-Data.tsv")
getwd()
setwd("C:/Users/galyn/Documents/GitHub/seminar")
getwd()
data = read_tsv("ICPSR_20240/DS0002/20240-0002-Data.tsv")
problems()
problems(read_tsv("ICPSR_20240/DS0002/20240-0002-Data.tsv"))
data
data
ncsr_data = read_tsv("ICPSR_20240/DS0002/20240-0002-Data.tsv")
ncsr_data.dim()
ncsr_data.dims
ncsr_data.dim
ncsr_data.dims()
levels(ncsr_data)
dims(ncsr_data)
ncsr_age_data = read_tsv("justage_vars_init.csv")
ncsr_age_data
ncsr_age_data = read_csv("justage_vars_init.csv")
ncsr_age_data
ncsr_age_data[1:]
ncsr_age_data[1:, :]
ncsr_age_data[1:ncol(ncsr_age_data)]
ncsr_age_data[,1:ncol(ncsr_age_data)]
ncsr_age_data[,2:ncol(ncsr_age_data)]
ncsr_age_data[2:ncol(ncsr_age_data)]
ncsr_age_data[][1:ncol(ncsr_age_data)]
ncsr_age_data[][2:ncol(ncsr_age_data)]
ncsr_age_data[,2:ncol(ncsr_age_data)]
ncsr_age_data[1:3,2:ncol(ncsr_age_data)]
ncsr_age_data[,2:ncol(ncsr_age_data)]
ncsr_age_data = read_csv("justage_vars_init.csv")[,2:ncol(ncsr_age_data)]
ncsr_age_data
ncsr_age_data = read_csv("age_init_as_dates.csv")[,2:ncol(ncsr_age_data)]
ncsr_age_data
ncsr_age_data[1, 2]
break
for (i in 1:ncol(ncsr_age_data)){
for (x in 0:nrow(ncsr_age_data)){
print(i, x)
if (x > 2){
break
}
}
}
print(ncsr_age_data[x, i])
for (i in 1:ncol(ncsr_age_data)){
for (x in 0:nrow(ncsr_age_data)){
print(ncsr_age_data[x, i])
if (x > 2){
break
}
}
}
print(ncsr_age_data[x, i])
for (i in 1:ncol(ncsr_age_data)){
for (x in 0:nrow(ncsr_age_data)){
print(ncsr_age_data[x, i])
if (ncsr_age_data[x, i] != -1){
print(ncsr_age_data[x, i])
}
}
}
ncsr_age_data[0,0]
ncsr_age_data[1,1]
for (x in 1:nrow(ncsr_age_data)){
print(ncsr_age_data[x, i])
if (ncsr_age_data[x, i] != -1){
print(ncsr_age_data[x, i])
}
}
for (i in 2:ncol(ncsr_age_data)){
for (x in 1:nrow(ncsr_age_data)){
print(ncsr_age_data[x, i])
if (ncsr_age_data[x, i] != -1){
print(ncsr_age_data[x, i])
}
}
}
for (i in 2:ncol(ncsr_age_data)){
for (x in 1:nrow(ncsr_age_data)){
if (ncsr_age_data[x, i] != -1){
print(ncsr_age_data[x, i])
}
}
}
for (i in 2:ncol(ncsr_age_data)){ #ignore caseid col
for (x in 1:nrow(ncsr_age_data)){
if (ncsr_age_data[x, i] != -1){
ncsr_age_data[x, i] = as.Date(ncsr_age_data[x, i], format="%m/%d/%Y")
}
}
}
ncsr_age_data = read_csv("age_init_as_dates.csv")[,2:ncol(ncsr_age_data)]
ncsr_age_data[1, 2]
for (i in 2:ncol(ncsr_age_data)){ #ignore caseid col
for (x in 1:nrow(ncsr_age_data)){
if (ncsr_age_data[x, i] != -1){
ncsr_age_data[x, i] = as.Date(ncsr_age_data[x, i], format="%m/%d/%Y")
}
}
}
ncsr_age_data[x, i] = as.Date(ncsr_age_data[x, i], format="%m-%d-%Y")
methods(as.Date)
methods(as.Date.date)
methods(as.Date.character)
as.Date("02-05-1999")
as.Date("02-05-1999", format = "%m-%d-%Y")
ncsr_age_data = read_csv("age_init_as_dates.csv")[,2:ncol(ncsr_age_data)]
ncsr_age_data[1, 2]
for (i in 2:ncol(ncsr_age_data)){ #ignore caseid col
for (x in 1:nrow(ncsr_age_data)){
if (ncsr_age_data[x, i] != -1){
print(ncsr_age_data[x,i])
ncsr_age_data[x, i] = as.Date(ncsr_age_data[x, i], format="%m-%d-%Y")
}
}
}
ncsr_age_data[x, i] = as.Date(ncsr_age_data[x, i], format="%m-%d-%Y")
ncsr_age_data[1, 2]
as.Date(ncsr_age_data[1, 2], format = "%m-%d-%Y")
d = ncsr_age_data[1, 2]
as.Date(d, format = "%m-%d-%Y")
ncsr_age_date[,i] = as.Date(ncsr_age_data[x, i], format="%m-%d-%Y")
as.Date(ncsr_age_data[, i], format="%m-%d-%Y")
as.Date(ncsr_age_data[,i], format="%m-%d-%Y")
as.Date(ncsr_age_data[,1], format="%m-%d-%Y")
as.Date(ncsr_age_data[,2], format="%m-%d-%Y")
as.Date(ncsr_age_data[1,], format="%m-%d-%Y")
d = ncsr_age_data[1, 2]
ncsr_age_data[1, 2]
as.Date(ncsr_age_data$D22A, format = "%m-%d-%Y")
as.Date(ncsr_age_date, format = "%m-%d-%Y")
as.Date(ncsr_age_data, format = "%m-%d-%Y")
tmp = ncsr_age_data[,4]
tmp
as.Date(tmp)
list
list(tmp)
c()
methods(c)
method(c)
c
methods(list)
as.list(tmp)
as.Date(as.list(tmp))
tmp = as.list(tmp)
as.Date(tmp, format = "%m-%d-%Y")
as.Date(tmp$, format = "%m-%d-%Y")
as.Date(tmp$D37A, format = "%m-%d-%Y")
className(tmp)
tmp
colnames(tmp)
names(tmp)
names(tmp) = "xxx"
names(tmp)
ncsr_age_date[,3] = tmp
ncsr_age_data[,3] = tmp
ncsr_age_data[,3]
for (i in 2:ncol(ncsr_age_data)){ #ignore caseid col
tmp = as.list(ncsr_age_data[,i])
names(tmp) = 'xxx'
tmp = as.Date(tmp$xxx, format = "%m-%d-%Y")
ncsr_age_data[,i] = tmp
}
tmp
tmp$xxx
_
ncsr_age_data = read_csv("age_init_as_dates.csv")[,2:ncol(ncsr_age_data)]
ncsr_age_data[1, 2]
for (i in 2:ncol(ncsr_age_data)){ #ignore caseid col
tmp = as.list(ncsr_age_data[,i])
names(tmp) = 'xxx'
tmp = as.Date(tmp$xxx, format = "%m-%d-%Y")
ncsr_age_data[,i] = tmp
}
tmp
ncsr[,1]
ncsr_age_data[,1]
ncsr_age_data[,2]
print(i)
for (i in 2:ncol(ncsr_age_data)){ #ignore caseid col
print(i)
tmp = as.list(ncsr_age_data[,i])
names(tmp) = 'xxx'
tmp = as.Date(tmp$xxx, format = "%m-%d-%Y")
ncsr_age_data[,i] = tmp
}
ncsr_age_data = read_csv("age_init_as_dates.csv")[,2:ncol(ncsr_age_data)]
for (i in 2:ncol(ncsr_age_data)){ #ignore caseid col
print(i)
tmp = as.list(ncsr_age_data[,i])
names(tmp) = 'xxx'
tmp = as.Date(tmp$xxx, format = "%m-%d-%Y")
ncsr_age_data[,i] = tmp
}
ncsr_age_data[,17]
ncsr_age_data
ncsr_age_data = read_csv("age_init_as_dates.csv")[,2:ncol(ncsr_age_data)]
ncsr_age_data
ncsr_age_data = read_csv("age_init_as_dates.csv")[,2:ncol(ncsr_age_data)]
ncsr_age_data
for (i in 2:ncol(ncsr_age_data)){ #ignore caseid col
print(i)
tmp = as.list(ncsr_age_data[,i])
names(tmp) = 'xxx'
tmp = as.Date(tmp$xxx, format = "%m-%d-%Y")
ncsr_age_data[,i] = tmp
}
tmp = as.Date(tmp$xxx, format = "%m-%d-%Y", origin = "01-01-2000")
ncsr_age_data = read_csv("age_init_as_dates.csv")[,2:ncol(ncsr_age_data)]
for (i in 2:ncol(ncsr_age_data)){ #ignore caseid col
print(i)
tmp = as.list(ncsr_age_data[,i])
names(tmp) = 'xxx'
tmp = as.Date(tmp$xxx, format = "%m-%d-%Y", origin = "01-01-2000")
ncsr_age_data[,i] = tmp
}
ncsr_age_data
ncsr_age_data = read_csv("age_init_as_dates.csv")[,2:ncol(ncsr_age_data)]
# get age data in date format [just 01/01/2000 incremented by year depending on age]
make_na(ncsr_age_data, -1)
install.packages('healthcareai')
# get age data in date format [just 01/01/2000 incremented by year depending on age]
make_na(ncsr_age_data, -1)
library(healthcareai)
# get age data in date format [just 01/01/2000 incremented by year depending on age]
make_na(ncsr_age_data, -1)
# get age data in date format [just 01/01/2000 incremented by year depending on age]
ncsr_age_data = make_na(ncsr_age_data, -1)
for (i in 2:ncol(ncsr_age_data)){ #ignore caseid col
print(i)
tmp = as.list(ncsr_age_data[,i])
names(tmp) = 'xxx'
tmp = as.Date(tmp$xxx, format = "%m-%d-%Y")
ncsr_age_data[,i] = tmp
}
ncsr_age_data
tst = read.csv(file = "archive/dataset-dija-2018-subset1.csv")
ncsr_age_data = readcsv("age_init_as_dates.csv")[,2:ncol(ncsr_age_data)]
ncsr_age_data[1, 2]
ncsr_age_data = read.csv("age_init_as_dates.csv")[,2:ncol(ncsr_age_data)]
ncsr_age_data[1, 2]
# get age data in date format [just 01/01/2000 incremented by year depending on age]
ncsr_age_data = make_na(ncsr_age_data, -1)
for (i in 2:ncol(ncsr_age_data)){ #ignore caseid col
tmp = as.list(ncsr_age_data[,i])
names(tmp) = 'xxx'
tmp = as.Date(tmp$xxx, format = "%m-%d-%Y")
ncsr_age_data[,i] = tmp
}
ncsr_age_data
